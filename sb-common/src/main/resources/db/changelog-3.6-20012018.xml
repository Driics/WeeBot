<?xml version="1.0" encoding="UTF-8"?>
<!--
 This file is part of JuniperBot.

 JuniperBot is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 JuniperBot is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with JuniperBot. If not, see <http://www.gnu.org/licenses/>.
-->
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet id="3.6-20012018-1" author="driics">
        <addColumn tableName="ranking">
            <column name="rank" type="INTEGER" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="3.6-20012018-2" author="driics">
        <createProcedure>
            CREATE
            OR REPLACE FUNCTION recalculate_rank(p_guild_id VARCHAR(255))
                RETURNS integer AS $$
            BEGIN
            UPDATE ranking r
            SET rank = r2.rank FROM (
                        SELECT r.id, r.exp, row_number() over (order by r.exp DESC) as rank FROM ranking r JOIN member m ON m.id = r.member_id AND m.guild_id = p_guild_id
                    ) r2
            WHERE r.id = r2.id;
            RETURN 1;
            END;
            $$
            LANGUAGE plpgsql;
        </createProcedure>
    </changeSet>

    <changeSet id="3.6-20012018-3" author="driics">
        <comment>Recalculate ranks</comment>
        <sql>
            SELECT recalculate_rank(m.guild_id)
            FROM (SELECT DISTINCT guild_id FROM member) m;
        </sql>
    </changeSet>

    <changeSet id="3.6-20012018-4" author="driics">
        <createTable tableName="steam_app">
            <column name="id" type="BIGSERIAL">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_steam_app"/>
            </column>
            <column name="version" type="BIGINT"/>
            <column name="app_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="terms" type="tsvector"/>
        </createTable>
    </changeSet>

    <changeSet id="3.6-20012018-5" author="driics">
        <createIndex tableName="steam_app" indexName="idx_steam_app_id">
            <column name="app_id"/>
        </createIndex>
        <createIndex tableName="steam_app" indexName="idx_steam_app_name">
            <column name="name"/>
        </createIndex>
        <sql>
            CREATE INDEX idx_steam_app_terms ON steam_app USING gin(terms);
        </sql>
    </changeSet>

    <changeSet id="3.6-20012018-6" author="driics">
        <createProcedure>
            CREATE FUNCTION create_steam_app_index()
                RETURNS trigger AS $$
            BEGIN
                    NEW.terms
            =to_tsvector('english',NEW.name);
            RETURN NEW;
            END;
            $$
            LANGUAGE plpgsql;
        </createProcedure>
        <sql>
            CREATE TRIGGER tg_steam_app_index
                BEFORE INSERT OR
            UPDATE ON steam_app
                FOR EACH ROW EXECUTE PROCEDURE create_steam_app_index();
        </sql>
    </changeSet>

    <changeSet id="3.6-20012018-7" author="driics">
        <createTable tableName="steam_cache">
            <column name="id" type="BIGSERIAL">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_steam_cache"/>
            </column>
            <column name="version" type="BIGINT"/>
            <column name="app_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="details" type="jsonb">
                <constraints nullable="true"/>
            </column>
            <column name="update_date" type="TIMESTAMP WITH TIME ZONE">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="3.6-20012018-8" author="driics">
        <createIndex tableName="steam_cache" indexName="idx_steam_cache_id" unique="true">
            <column name="app_id"/>
        </createIndex>
        <createIndex tableName="steam_cache" indexName="idx_steam_cache_date">
            <column name="update_date"/>
        </createIndex>
    </changeSet>

    <changeSet id="3.6-20012018-9" author="driics">
        <addColumn tableName="steam_cache">
            <column name="locale" type="VARCHAR(10)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="3.6-20012018-10" author="driics">
        <createIndex tableName="steam_cache" indexName="idx_steam_cache_locale">
            <column name="locale"/>
        </createIndex>
    </changeSet>

    <changeSet id="3.6-20012018-11" author="driics">
        <dropIndex tableName="steam_cache" indexName="idx_steam_cache_id"/>
        <createIndex tableName="steam_cache" indexName="idx_steam_cache_id">
            <column name="app_id"/>
        </createIndex>
    </changeSet>

</databaseChangeLog>